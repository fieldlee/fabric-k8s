---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: $artifactsName
    labels:
      app: $artifactsName
spec:
    capacity:
       storage: 500Mi
    accessModes:
       - ReadWriteMany
    nfs:
      path: /opt/share/fabric/channel-artifacts
      server: 172.31.21.208

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    namespace: $namespace
    name: $artifactsName
spec:
   accessModes:
     - ReadWriteMany
   resources:
      requests:
        storage: 10Mi
   selector:
     matchLabels:
       app: $artifactsName

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   namespace: $namespace
   name: $name
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
       app: cli
    spec:
      containers:
        - name: $name
          image: hyperledger/fabric-tools:1.4.1
          env:
          - name: CORE_PEER_TLS_ENABLED
            value: "false"
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: GOPATH
            value: /opt/gopath
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_ID
            value: $name
          - name: CORE_PEER_ADDRESS
            value: $peerAddress
          - name: CORE_PEER_LOCALMSPID
            value: $mspid
          - name: CORE_PEER_MSPCONFIGPATH
            value: /etc/hyperledger/fabric/msp
          - name: GODEBUG
            value: netdns=go
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          command: ["/bin/bash", "-c", "--"]
          args: ["while true; do sleep 30; done;"]
          volumeMounts:
           - mountPath: /host/var/run/
             name: run
           - mountPath: /etc/hyperledger/fabric/msp
             name: certificate
             subPath: $mspPath
           - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
             name: artifacts
      volumes:
        - name: certificate
          persistentVolumeClaim:
              claimName: $pvName
        - name: artifacts
          persistentVolumeClaim:
              claimName: $artifactsName
        - name: run
          hostPath:
            path: /var/run
